--Base Tables

CREATE TABLE IF NOT EXISTS PlayerClass (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
Name TEXT NOT NULL DEFAULT "Default",
Description TEXT NOT NULL DEFAULT "No description.",
ModelPath TEXT NOT NULL DEFAULT "", --Have a default thing
AnimationPath TEXT NOT NULL DEFAULT "", --Have a default thing
MaxHealth INT NOT NULL DEFAULT 100,
MgcAtk INT NOT NULL DEFAULT 10,
PhsAtk INT NOT NULL DEFAULT 10,
Speed INT NOT NULL DEFAULT 10,
Defense INT NOT NULL DEFAULT 10
);

CREATE TABLE IF NOT EXISTS Spell (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
Name TEXT NOT NULL DEFAULT "Default",
Description TEXT NOT NULL DEFAULT "No description.",
Effect TEXT NOT NULL DEFAULT "DefaultEffect()",
Pattern TEXT NOT NULL DEFAULT "0;1;2;3;4;5;6;7;8",
AnimationPath TEXT NOT NULL DEFAULT "", --Have a default thing
EffectPath TEXT NOT NULL DEFAULT "" --Have a default thing
);

CREATE TABLE IF NOT EXISTS Enemy (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
Name TEXT NOT NULL DEFAULT "Default",
Description TEXT NOT NULL DEFAULT "No description.",
ModelPath TEXT NOT NULL DEFAULT "", --Have a default thing
AnimationPath TEXT NOT NULL DEFAULT "", --Have a default thing
MaxHealth INT NOT NULL DEFAULT 100,
MgcAtk INT NOT NULL DEFAULT 10,
PhsAtk INT NOT NULL DEFAULT 10,
Speed INT NOT NULL DEFAULT 10,
Defense INT NOT NULL DEFAULT 10
);

CREATE TABLE IF NOT EXISTS Item (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
Name TEXT NOT NULL DEFAULT "Default",
Description TEXT NOT NULL DEFAULT "No description.",
IconPath TEXT NOT NULL DEFAULT "", --Have a default thing
ModelPath TEXT NOT NULL DEFAULT "", --Have a default thing
AnimationPath TEXT NOT NULL DEFAULT "", --Have a default thing
Effect TEXT NOT NULL DEFAULT "DefaultEffect()",
IsOneUse BOOL NOT NULL DEFAULT 0
);

--Joining tables

CREATE TABLE IF NOT EXISTS PlayerSpell (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
ClassID INT NOT NULL REFERENCES PlayerClass(ID),
SpellID INT NOT NULL REFERENCES Spell(ID)
);

CREATE TABLE IF NOT EXISTS EnemySpell (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
EnemyID INT NOT NULL REFERENCES Enemy(ID),
SpellID INT NOT NULL REFERENCES Spell(ID)
);


--Level management

CREATE TABLE IF NOT EXISTS Level (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
Number INT NOT NULL DEFAULT 0,
Name TEXT NOT NULL DEFAULT "Default",
Description TEXT NOT NULL DEFAULT "No description.",
ThumbnailPath TEXT NOT NULL DEFAULT "", --Have a default thing
ItemReward INT NOT NULL REFERENCES Item(ID)
);

CREATE TABLE IF NOT EXISTS LevelEvent (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
LevelID INT NOT NULL REFERENCES Level(ID),
Position INT NOT NULL DEFAULT 0,
MoneyReward INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS EventEnemy (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
EventID INT NOT NULL REFERENCES LevelEvent(ID),
EnemyID INT NOT NULL REFERENCES Enemy(ID),
Position INT NOT NULL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS EventItem (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
EventID INT NOT NULL REFERENCES LevelEvent(ID),
ItemID INT NOT NULL REFERENCES Item(ID),
Position INT NOT NULL DEFAULT 0,
Price INT NOT NULL DEFAULT 10
);

--Save Data

CREATE TABLE IF NOT EXISTS SaveData (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
Name TEXT DEFAULT "",
ClassID INT REFERENCES PlayerClass(ID),
Money INT DEFAULT 0
);

CREATE TABLE IF NOT EXISTS SaveItems (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
SaveID INT REFERENCES SaveData(ID),
ItemID INT REFERENCES Item(ID),
IsEquiped BOOL DEFAULT 0
);

CREATE TABLE IF NOT EXISTS SaveSpells (
ID INTEGER PRIMARY KEY ASC AUTOINCREMENT,
SaveID INT REFERENCES SaveData(ID),
SpellID INT REFERENCES Spell(ID)
);
